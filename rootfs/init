#!/bin/bash

#------------------------------------------------------------------------------
# Wait for the network:
#------------------------------------------------------------------------------

[ "$WAIT_NETWORK" ] && {

  RETRIES=20

  echo '[Init] Waiting for the network...'

  while [ $RETRIES -gt 0 ]; do
    ip r 2> /dev/null | grep -q default && break
    sleep 1; RETRIES=$((RETRIES - 1))
  done

  [ $RETRIES -eq 0 ] && {
    echo '[Init] There is no network'
    exit 1
  }

  echo '[Init] A default gateway is present'
}

#------------------------------------------------------------------------------
# Configure the service:
#------------------------------------------------------------------------------

echo '[Init] Configuring the service...'

for i in rsa ecdsa ed25519; do
  echo "[Init] Generating ssh_host_${i}_key..."
  [ -f /etc/ssh/ssh_host_${i}_key ] || \
  ssh-keygen -q -f /etc/ssh/ssh_host_${i}_key -t $i -N ''
done

find /home/git \
! -path "/home/git/repositories*" \
! -path "/home/git/projects*" \
-exec chown git:git {} \;

cd /home/git && [ -d ./repositories ] && su git -c "

  cat /etc/ssh/ssh_host_rsa_key.pub | \
  awk '{print \"localhost \"\$1\" \"\$2}' >> .ssh/known_hosts

  [ \"\$TRUST_HOSTS\" ] && \
  ssh-keyscan \$TRUST_HOSTS 2> /dev/null >> .ssh/known_hosts

  [ -f .ssh/id_rsa.pub ] && \
  cat .ssh/id_rsa.pub >> .ssh/authorized_keys

  [ -d ./repositories/gitolite-admin.git ] && \
  mv ./repositories/gitolite-admin.git ./repositories/gitolite-admin.git-tmp

  gitolite setup -a dummy &> /dev/null

  [ -d ./repositories/gitolite-admin.git-tmp ] && {
    rm -rf ./repositories/gitolite-admin.git
    mv ./repositories/gitolite-admin.git-tmp ./repositories/gitolite-admin.git
  }

  [ -d .gitolite/local/hooks/repo-specific ] || {
    mkdir -p .gitolite/local/hooks/repo-specific
    chmod 700 .gitolite/local/hooks/repo-specific
  }

  cp /etc/gitolite/gitolite.rc .gitolite.rc
  cp /etc/gitolite/post-receive .gitolite/hooks/common/
  rm -f projects.list

  cd ~/repositories/gitolite-admin.git && \
  GL_LIBDIR=/usr/share/gitolite3/lib hooks/post-update refs/heads/master

" || {

  echo '[Init] You must provide a repositories volume'
  exit 1
}

#------------------------------------------------------------------------------
# Run:
#------------------------------------------------------------------------------

echo "[Init] Executing: $*"
exec $*
